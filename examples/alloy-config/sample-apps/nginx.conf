# Nginx Configuration for Alloy POC Sample Application
# This configuration includes metrics export and logging for observability

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
load_module modules/ngx_http_stub_status_module.so;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Logging format for observability
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format json escape=json
        '{'
            '"timestamp":"$time_iso8601",' 
            '"remote_addr":"$remote_addr",' 
            '"remote_user":"$remote_user",' 
            '"request":"$request",' 
            '"status":$status,' 
            '"body_bytes_sent":$body_bytes_sent,' 
            '"http_referer":"$http_referer",' 
            '"http_user_agent":"$http_user_agent",' 
            '"http_x_forwarded_for":"$http_x_forwarded_for",' 
            '"request_time":$request_time,' 
            '"upstream_connect_time":"$upstream_connect_time",' 
            '"upstream_header_time":"$upstream_header_time",' 
            '"upstream_response_time":"$upstream_response_time",' 
            '"request_id":"$request_id"'
        '}';
    
    access_log /var/log/nginx/access.log json;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Hide Nginx version
    server_tokens off;
    
    # Main server block
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # Add request ID for tracing
        add_header X-Request-ID $request_id always;
        
        # Metrics endpoint for Prometheus scraping
        location /metrics {
            stub_status on;
            access_log off;
            allow 172.20.0.0/16;  # Docker network
            allow 127.0.0.1;
            allow ::1;
            deny all;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 '{"status":"healthy","service":"nginx-sample","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }
        
        # API endpoints with rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Simulate different response times
            location /api/fast {
                return 200 '{"message":"Fast response","timestamp":"$time_iso8601","request_id":"$request_id"}';
                add_header Content-Type application/json;
            }
            
            location /api/slow {
                # Simulate slow response
                echo_sleep 2;
                return 200 '{"message":"Slow response after 2s","timestamp":"$time_iso8601","request_id":"$request_id"}';
                add_header Content-Type application/json;
            }
            
            location /api/users {
                return 200 '{"users":[{"id":1,"name":"John Doe"},{"id":2,"name":"Jane Smith"}],"timestamp":"$time_iso8601","request_id":"$request_id"}';
                add_header Content-Type application/json;
            }
            
            location /api/products {
                return 200 '{"products":[{"id":1,"name":"Product A","price":29.99},{"id":2,"name":"Product B","price":39.99}],"timestamp":"$time_iso8601","request_id":"$request_id"}';
                add_header Content-Type application/json;
            }
            
            # Simulate errors
            location /api/error/404 {
                return 404 '{"error":"Resource not found","timestamp":"$time_iso8601","request_id":"$request_id"}';
                add_header Content-Type application/json;
            }
            
            location /api/error/500 {
                return 500 '{"error":"Internal server error","timestamp":"$time_iso8601","request_id":"$request_id"}';
                add_header Content-Type application/json;
            }
            
            # Default API response
            return 200 '{"message":"API endpoint","path":"$uri","timestamp":"$time_iso8601","request_id":"$request_id"}';
            add_header Content-Type application/json;
        }
        
        # Login endpoint with stricter rate limiting
        location /api/login {
            limit_req zone=login burst=5 nodelay;
            return 200 '{"message":"Login successful","token":"fake-jwt-token","timestamp":"$time_iso8601","request_id":"$request_id"}';
            add_header Content-Type application/json;
        }
        
        # Large data endpoint
        location /api/data/large {
            return 200 '{"data":"This is a large response with lots of data. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.","size":"large","timestamp":"$time_iso8601","request_id":"$request_id"}';
            add_header Content-Type application/json;
        }
        
        # Static files
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
        }
        
        location = /50x.html {
            internal;
        }
    }
    
    # Additional server for testing different ports
    server {
        listen 8081;
        server_name localhost;
        
        location / {
            return 200 '{"service":"nginx-secondary","port":8081,"timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }
        
        location /metrics {
            stub_status on;
            access_log off;
        }
    }
}