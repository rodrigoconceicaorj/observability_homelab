{"version":3,"file":"domMutationMonitor.js","sourceRoot":"","sources":["../../../../src/instrumentations/userActions/domMutationMonitor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAEhD,OAAO,EAAE,yBAAyB,EAAE,MAAM,SAAS,CAAC;AAGpD,MAAM,UAAU,mBAAmB;IACjC,MAAM,UAAU,GAAG,IAAI,UAAU,EAAsB,CAAC;IAExD,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,CAAC,cAAc,EAAE,SAAS,EAAE,EAAE;QAClE,UAAU,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,yBAAyB,EAAE,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE;QACzB,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,IAAI;QACf,OAAO,EAAE,IAAI;QACb,aAAa,EAAE,IAAI;KACpB,CAAC,CAAC;IAEH,OAAO,UAAU,CAAC;AACpB,CAAC","sourcesContent":["import { Observable } from '@grafana/faro-core';\n\nimport { MESSAGE_TYPE_DOM_MUTATION } from './const';\nimport type { DomMutationMessage } from './types';\n\nexport function monitorDomMutations(): Observable {\n  const observable = new Observable<DomMutationMessage>();\n\n  const observer = new MutationObserver((_mutationsList, _observer) => {\n    observable.notify({ type: MESSAGE_TYPE_DOM_MUTATION });\n  });\n\n  observer.observe(document, {\n    attributes: true,\n    childList: true,\n    subtree: true,\n    characterData: true,\n  });\n\n  return observable;\n}\n"]}