{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/instrumentations/performance/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { unknownString } from '@grafana/faro-core';\n\nimport type { RESOURCE_ENTRY } from './performanceConstants';\n\nexport type FaroNavigationTiming = Readonly<\n  {\n    duration: string;\n    documentParsingTime: string;\n    domProcessingTime: string;\n    pageLoadTime: string;\n    domContentLoadHandlerTime: string;\n    onLoadTime: string;\n    type: NavigationTimingType;\n  } & FaroResourceTiming\n>;\n\nexport type FaroResourceTiming = Readonly<{\n  name: string;\n  duration: string;\n  protocol: string;\n  tcpHandshakeTime: string;\n  dnsLookupTime: string;\n  tlsNegotiationTime: string;\n  responseStatus: string;\n  redirectTime: string;\n  requestTime: string;\n  fetchTime: string;\n  responseTime: string;\n  serviceWorkerTime: string;\n  decodedBodySize: string;\n  encodedBodySize: string;\n  cacheHitStatus: 'cache' | 'conditionalFetch' | 'fullLoad';\n  renderBlockingStatus: 'blocking' | 'non-blocking' | typeof unknownString;\n  initiatorType: string;\n  // serverTiming: PerformanceServerTiming[];\n  visibilityState: DocumentVisibilityState;\n  ttfb: string;\n  transferSize: string;\n}>;\n\nexport type FaroNavigationItem = {\n  faroNavigationId: string;\n  faroPreviousNavigationId: string;\n} & FaroNavigationTiming &\n  FaroResourceTiming;\n\nexport type FaroResourceItem = {\n  faroNavigationId: string;\n  faroResourceId: string;\n} & FaroResourceTiming;\n\nexport type CacheType = 'cache' | 'conditionalFetch' | 'fullLoad';\n\nexport type ResourceEntryMessage = {\n  type: typeof RESOURCE_ENTRY;\n};\n"]}