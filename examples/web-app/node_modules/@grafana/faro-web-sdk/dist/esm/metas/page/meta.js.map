{"version":3,"file":"meta.js","sourceRoot":"","sources":["../../../../src/metas/page/meta.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAA4B,MAAM,oBAAoB,CAAC;AAE1E,IAAI,WAA+B,CAAC;AACpC,IAAI,MAA0B,CAAC;AAO/B,MAAM,UAAU,cAAc,CAAC,EAAE,cAAc,EAAE,eAAe,KAA0B,EAAE;IAG1F,MAAM,QAAQ,GAAiC,GAAG,EAAE;QAClD,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC;QAEnC,IAAI,UAAU,CAAC,cAAc,CAAC,IAAI,WAAW,KAAK,YAAY,EAAE,CAAC;YAC/D,WAAW,GAAG,YAAY,CAAC;YAC3B,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;QACpC,CAAC;QAED,OAAO;YACL,IAAI,gCACF,GAAG,EAAE,YAAY,IACd,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAC9B,eAAe,CACnB;SACF,CAAC;IACJ,CAAC,CAAC;IAEF,OAAO,QAAQ,CAAC;AAClB,CAAC","sourcesContent":["import { isFunction, type Meta, type MetaItem } from '@grafana/faro-core';\n\nlet currentHref: string | undefined;\nlet pageId: string | undefined;\n\ntype createPageMetaProps = {\n  generatePageId?: (location: Location) => string;\n  initialPageMeta?: Meta['page'];\n};\n\nexport function createPageMeta({ generatePageId, initialPageMeta }: createPageMetaProps = {}): MetaItem<\n  Pick<Meta, 'page'>\n> {\n  const pageMeta: MetaItem<Pick<Meta, 'page'>> = () => {\n    const locationHref = location.href;\n\n    if (isFunction(generatePageId) && currentHref !== locationHref) {\n      currentHref = locationHref;\n      pageId = generatePageId(location);\n    }\n\n    return {\n      page: {\n        url: locationHref,\n        ...(pageId ? { id: pageId } : {}),\n        ...initialPageMeta,\n      },\n    };\n  };\n\n  return pageMeta;\n}\n"]}