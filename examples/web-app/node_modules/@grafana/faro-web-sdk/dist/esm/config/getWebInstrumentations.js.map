{"version":3,"file":"getWebInstrumentations.js","sourceRoot":"","sources":["../../../src/config/getWebInstrumentations.ts"],"names":[],"mappings":"AAEA,OAAO,EACL,sBAAsB,EACtB,kBAAkB,EAClB,qBAAqB,EACrB,0BAA0B,EAC1B,sBAAsB,EACtB,yBAAyB,EACzB,mBAAmB,EACnB,wBAAwB,GACzB,MAAM,qBAAqB,CAAC;AAI7B,MAAM,UAAU,sBAAsB,CAAC,UAAyC,EAAE;IAChF,MAAM,gBAAgB,GAAsB;QAC1C,IAAI,yBAAyB,EAAE;QAC/B,IAAI,qBAAqB,EAAE;QAC3B,IAAI,wBAAwB,EAAE;QAC9B,IAAI,sBAAsB,EAAE;QAC5B,IAAI,mBAAmB,EAAE;KAC1B,CAAC;IAEF,IAAI,OAAO,CAAC,gCAAgC,KAAK,KAAK,EAAE,CAAC;QACvD,iFAAiF;QACjF,gBAAgB,CAAC,OAAO,CAAC,IAAI,0BAA0B,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,IAAI,OAAO,CAAC,0CAA0C,KAAK,KAAK,EAAE,CAAC;QACjE,gBAAgB,CAAC,IAAI,CAAC,IAAI,kBAAkB,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,IAAI,OAAO,CAAC,cAAc,KAAK,KAAK,EAAE,CAAC;QACrC,gBAAgB,CAAC,IAAI,CACnB,IAAI,sBAAsB,CAAC;YACzB,cAAc,EAAE,OAAO,CAAC,4BAA4B;SACrD,CAAC,CACH,CAAC;IACJ,CAAC;IAED,OAAO,gBAAgB,CAAC;AAC1B,CAAC","sourcesContent":["import type { Instrumentation } from '@grafana/faro-core';\n\nimport {\n  ConsoleInstrumentation,\n  CSPInstrumentation,\n  ErrorsInstrumentation,\n  PerformanceInstrumentation,\n  SessionInstrumentation,\n  UserActionInstrumentation,\n  ViewInstrumentation,\n  WebVitalsInstrumentation,\n} from '../instrumentations';\n\nimport type { GetWebInstrumentationsOptions } from './types';\n\nexport function getWebInstrumentations(options: GetWebInstrumentationsOptions = {}): Instrumentation[] {\n  const instrumentations: Instrumentation[] = [\n    new UserActionInstrumentation(),\n    new ErrorsInstrumentation(),\n    new WebVitalsInstrumentation(),\n    new SessionInstrumentation(),\n    new ViewInstrumentation(),\n  ];\n\n  if (options.enablePerformanceInstrumentation !== false) {\n    // unshift to ensure that initialization starts before the other instrumentations\n    instrumentations.unshift(new PerformanceInstrumentation());\n  }\n\n  if (options.enableContentSecurityPolicyInstrumentation !== false) {\n    instrumentations.push(new CSPInstrumentation());\n  }\n\n  if (options.captureConsole !== false) {\n    instrumentations.push(\n      new ConsoleInstrumentation({\n        disabledLevels: options.captureConsoleDisabledLevels,\n      })\n    );\n  }\n\n  return instrumentations;\n}\n"]}