import { BaseTransport } from '@grafana/faro-core';
import type { Patterns, PromiseBuffer, TransportItem } from '@grafana/faro-core';
import type { FetchTransportOptions } from './types';
export declare class FetchTransport extends BaseTransport {
    private options;
    readonly name = "@grafana/faro-web-sdk:transport-fetch";
    readonly version = "1.19.0";
    promiseBuffer: PromiseBuffer<Response | void>;
    private readonly rateLimitBackoffMs;
    private readonly getNow;
    private disabledUntil;
    constructor(options: FetchTransportOptions);
    send(items: TransportItem[]): Promise<void>;
    getIgnoreUrls(): Patterns;
    isBatched(): boolean;
    private getRetryAfterDate;
    private extendFaroSession;
}
