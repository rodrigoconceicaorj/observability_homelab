{"version":3,"file":"processUserActionEventHandler.js","sourceRoot":"","sources":["../../../../src/instrumentations/userActions/processUserActionEventHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  apiMessageBus,\n  dateNow,\n  genShortID,\n  Observable,\n  stringifyObjectValues,\n  USER_ACTION_CANCEL,\n  USER_ACTION_END,\n  USER_ACTION_HALT,\n  USER_ACTION_START,\n} from '@grafana/faro-core';\nimport type { Faro, Subscription } from '@grafana/faro-core';\n\nimport {\n  MESSAGE_TYPE_HTTP_REQUEST_END,\n  MESSAGE_TYPE_HTTP_REQUEST_START,\n  userActionDataAttributeParsed as userActionDataAttribute,\n  userActionStartByApiCallEventName,\n} from './const';\nimport { monitorDomMutations } from './domMutationMonitor';\nimport { monitorHttpRequests } from './httpRequestMonitor';\nimport { monitorPerformanceEntries } from './performanceEntriesMonitor';\nimport type { ApiEvent, HttpRequestEndMessage, HttpRequestMessagePayload, HttpRequestStartMessage } from './types';\nimport { convertDataAttributeName } from './util';\n\nconst maxFollowUpActionTimeRange = 100;\n\nexport function getUserEventHandler(faro: Faro) {\n  const { api, config } = faro;\n\n  const httpMonitor = monitorHttpRequests();\n  const domMutationsMonitor = monitorDomMutations();\n  const performanceEntriesMonitor = monitorPerformanceEntries();\n\n  let timeoutId: number | undefined;\n  let actionRunning = false;\n\n  function processUserEvent(event: PointerEvent | KeyboardEvent | ApiEvent) {\n    let userActionName: string | undefined;\n\n    const isApiEventDetected = isApiEvent(event);\n    if (isApiEventDetected) {\n      userActionName = event.name;\n    } else {\n      userActionName = getUserActionName(\n        event.target as HTMLElement,\n        config.trackUserActionsDataAttributeName ?? userActionDataAttribute\n      );\n    }\n\n    if (actionRunning || userActionName == null) {\n      return;\n    }\n\n    actionRunning = true;\n\n    const startTime = dateNow();\n    let endTime: number | undefined;\n\n    const actionId = genShortID();\n\n    apiMessageBus.notify({\n      type: USER_ACTION_START,\n      name: userActionName,\n      startTime: startTime,\n      parentId: actionId,\n    });\n\n    // Triggers if no initial action happened within the first 100ms\n    timeoutId = startTimeout(\n      timeoutId,\n      () => {\n        endTime = dateNow();\n\n        // Listening for follow up activities stops once action is cancelled (set to false)\n        actionRunning = false;\n        sendUserActionCancelMessage(userActionName, actionId);\n      },\n      maxFollowUpActionTimeRange\n    );\n\n    const runningRequests = new Map<string, HttpRequestMessagePayload>();\n    let isHalted = false;\n    let pendingActionTimeoutId: number | undefined;\n\n    const allMonitorsSub = new Observable()\n      .merge(httpMonitor, domMutationsMonitor, performanceEntriesMonitor)\n      .takeWhile(() => actionRunning)\n      .filter((msg) => {\n        // If the user action is in halt state, we only keep listening to ended http requests\n        if (isHalted && !(isRequestEndMessage(msg) && runningRequests.has(msg.request.requestId))) {\n          return false;\n        }\n\n        return true;\n      })\n      .subscribe((msg) => {\n        if (isRequestStartMessage(msg)) {\n          // An action is on halt if it has pending items, like pending HTTP requests.\n          // In this case we start a separate timeout to wait for the requests to finish\n          // If in the halt state, we stop adding Faro signals to the action's buffer (see userActionLifecycleHandler.ts)\n          // But we are still subscribed to\n          runningRequests.set(msg.request.requestId, msg.request);\n        }\n        if (isRequestEndMessage(msg)) {\n          runningRequests.delete(msg.request.requestId);\n        }\n\n        // A http request, a DOM mutation or a performance entry happened so we have a follow up activity and start the timeout again\n        // If timeout is triggered the user action is done and we send respective messages and events\n        timeoutId = startTimeout(\n          timeoutId,\n          () => {\n            endTime = dateNow();\n\n            const userActionParentEventProps = {\n              api,\n              userActionName,\n              startTime,\n              endTime: endTime!,\n              actionId,\n              event,\n              ...(isApiEventDetected ? { attributes: event.attributes } : {}),\n            };\n\n            const hasPendingRequests = runningRequests.size > 0;\n            const isAllPendingRequestsResolved = isHalted && !hasPendingRequests;\n\n            if (isAllPendingRequestsResolved) {\n              clearTimeout(pendingActionTimeoutId);\n              isHalted = false;\n            }\n\n            if (hasPendingRequests) {\n              isHalted = true;\n\n              apiMessageBus.notify({\n                type: USER_ACTION_HALT,\n                name: userActionName,\n                parentId: actionId,\n                reason: 'pending-requests',\n                haltTime: dateNow(),\n              });\n\n              pendingActionTimeoutId = startTimeout(\n                undefined,\n                () => {\n                  unsubscribeAllMonitors(allMonitorsSub);\n                  endUserAction(userActionParentEventProps);\n                  actionRunning = false;\n                  isHalted = false;\n                },\n                1000 * 10\n              );\n            } else {\n              unsubscribeAllMonitors(allMonitorsSub);\n              endUserAction(userActionParentEventProps);\n              actionRunning = false;\n              isHalted = false;\n            }\n          },\n          maxFollowUpActionTimeRange\n        );\n      });\n  }\n\n  return processUserEvent;\n}\n\n/**\n * User action was successfully completed and we send the final event(s)\n */\nfunction endUserAction(props: {\n  api: Faro['api'];\n  userActionName: string;\n  startTime: number;\n  endTime: number;\n  actionId: string;\n  event: PointerEvent | KeyboardEvent | ApiEvent;\n  attributes?: Record<string, string>;\n}) {\n  const { api, userActionName, startTime, endTime, actionId, event, attributes } = props;\n  const duration = endTime - startTime;\n  const eventType = event.type;\n\n  // order matters, first emit the user-action-end event and afterwards push the parent event\n  apiMessageBus.notify({\n    type: USER_ACTION_END,\n    name: userActionName,\n    id: actionId,\n    startTime,\n    endTime,\n    duration,\n    eventType,\n  });\n\n  // Send the final action parent event\n  api.pushEvent(\n    userActionName,\n    {\n      userActionStartTime: startTime.toString(),\n      userActionEndTime: endTime.toString(),\n      userActionDuration: duration.toString(),\n      userActionTrigger: eventType,\n      ...stringifyObjectValues(attributes),\n    },\n    undefined,\n    {\n      timestampOverwriteMs: startTime,\n      customPayloadTransformer: (payload) => {\n        payload.action = {\n          id: actionId,\n          name: userActionName,\n        };\n\n        return payload;\n      },\n    }\n  );\n}\n\nfunction getUserActionName(element: HTMLElement, dataAttributeName: string): string | undefined {\n  const parsedDataAttributeName = convertDataAttributeName(dataAttributeName);\n  const dataset = element.dataset;\n\n  for (const key in dataset) {\n    if (key === parsedDataAttributeName) {\n      return dataset[key];\n    }\n  }\n\n  return undefined;\n}\n\nfunction startTimeout(timeoutId: number | undefined, cb: () => void, delay: number) {\n  if (timeoutId) {\n    clearTimeout(timeoutId);\n  }\n\n  //@ts-expect-error for some reason vscode is using the node types\n  timeoutId = setTimeout(() => {\n    cb();\n  }, delay);\n\n  return timeoutId;\n}\n\nfunction sendUserActionCancelMessage(userActionName: string, actionId: string) {\n  apiMessageBus.notify({\n    type: USER_ACTION_CANCEL,\n    name: userActionName,\n    parentId: actionId,\n  });\n}\n\nfunction unsubscribeAllMonitors(allMonitorsSub: Subscription | undefined) {\n  allMonitorsSub?.unsubscribe();\n  allMonitorsSub = undefined;\n}\n\nfunction isRequestStartMessage(msg: any): msg is HttpRequestStartMessage {\n  return msg.type === MESSAGE_TYPE_HTTP_REQUEST_START;\n}\n\nfunction isRequestEndMessage(msg: any): msg is HttpRequestEndMessage {\n  return msg.type === MESSAGE_TYPE_HTTP_REQUEST_END;\n}\n\nfunction isApiEvent(apiEvent: any): apiEvent is { name: string; attributes?: Record<string, string> } {\n  return apiEvent.type === userActionStartByApiCallEventName && typeof apiEvent.name === 'string';\n}\n"]}