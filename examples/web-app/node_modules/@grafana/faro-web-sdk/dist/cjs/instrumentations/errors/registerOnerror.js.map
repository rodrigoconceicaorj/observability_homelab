{"version":3,"file":"registerOnerror.js","sourceRoot":"","sources":["../../../../src/instrumentations/errors/registerOnerror.ts"],"names":[],"mappings":";;AAIA,0CAqBC;AAvBD,qDAA4D;AAE5D,SAAgB,eAAe,CAAC,GAAQ;IACtC,IAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC;IAElC,MAAM,CAAC,OAAO,GAAG;QAAC,cAAO;aAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;YAAP,yBAAO;;QACvB,IAAI,CAAC;YACG,IAAA,KAA+B,IAAA,yCAAuB,EAAC,IAAI,CAAC,EAA1D,KAAK,WAAA,EAAE,IAAI,UAAA,EAAE,WAAW,iBAAkC,CAAC;YACnE,IAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAE9B,IAAI,KAAK,EAAE,CAAC;gBACV,IAAM,OAAO,GAAqB,EAAE,IAAI,MAAA,EAAE,WAAW,aAAA,EAAE,CAAC;gBAExD,IAAI,aAAa,IAAI,IAAI,EAAE,CAAC;oBAC1B,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;gBACxC,CAAC;gBAED,GAAG,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;YAC3C,CAAC;QACH,CAAC;gBAAS,CAAC;YACT,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAClC,CAAC;IACH,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import type { API, PushErrorOptions } from '@grafana/faro-core';\n\nimport { getDetailsFromErrorArgs } from './getErrorDetails';\n\nexport function registerOnerror(api: API): void {\n  const oldOnerror = window.onerror;\n\n  window.onerror = (...args) => {\n    try {\n      const { value, type, stackFrames } = getDetailsFromErrorArgs(args);\n      const originalError = args[4];\n\n      if (value) {\n        const options: PushErrorOptions = { type, stackFrames };\n\n        if (originalError != null) {\n          options.originalError = originalError;\n        }\n\n        api.pushError(new Error(value), options);\n      }\n    } finally {\n      oldOnerror?.apply(window, args);\n    }\n  };\n}\n"]}