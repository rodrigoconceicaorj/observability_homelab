{"version":3,"file":"semconv.js","sourceRoot":"","sources":["../../src/semconv.ts"],"names":[],"mappings":";AAAA;;;;;;;GAOG;;;AAEU,QAAA,eAAe,GAAG,YAAY,CAAC;AAC/B,QAAA,gCAAgC,GAAG,6BAA6B,CAAC;AACjE,QAAA,sBAAsB,GAAG,mBAAmB,CAAC;AAE1D,oFAAoF;AACvE,QAAA,yBAAyB,GAAG,sBAAsB,CAAC;AACnD,QAAA,4BAA4B,GAAG,yBAAyB,CAAC;AAEtE,kGAAkG;AACrF,QAAA,0BAA0B,GAAG,uBAAuB,CAAC;AACrD,QAAA,6BAA6B,GAAG,0BAA0B,CAAC;AAExE,gEAAgE;AACnD,QAAA,mBAAmB,GAAG,gBAAgB,CAAC;AACvC,QAAA,qBAAqB,GAAG,kBAAkB,CAAC;AAC3C,QAAA,mBAAmB,GAAG,gBAAgB,CAAC;AACvC,QAAA,qBAAqB,GAAG,kBAAkB,CAAC","sourcesContent":["/**\n Unstable SemConv\n Because the \"incubating\" entry-point may include breaking changes in minor versions,\n it is recommended that instrumentation libraries not import @opentelemetry/semantic-conventions/incubating in runtime code,\n but instead copy relevant definitions into their own code base. (This is the same recommendation as for other languages.)\n \n See: https://www.npmjs.com/package/@opentelemetry/semantic-conventions#:~:text=%7D)%3B-,Unstable%20SemConv,-Because%20the%20%22incubating\n */\n\nexport const ATTR_SESSION_ID = 'session.id';\nexport const ATTR_DEPLOYMENT_ENVIRONMENT_NAME = 'deployment.environment.name';\nexport const ATTR_SERVICE_NAMESPACE = 'service.namespace';\n\n// https://opentelemetry.io/docs/specs/semconv/resource/process/#javascript-runtimes\nexport const ATTR_PROCESS_RUNTIME_NAME = 'process.runtime.name';\nexport const ATTR_PROCESS_RUNTIME_VERSION = 'process.runtime.version';\n\n// https://opentelemetry.io/docs/specs/semconv/attributes-registry/telemetry/#telemetry-attributes\nexport const ATTR_TELEMETRY_DISTRO_NAME = 'telemetry.distro.name';\nexport const ATTR_TELEMETRY_DISTRO_VERSION = 'telemetry.distro.version';\n\n// https://opentelemetry.io/docs/specs/semconv/resource/browser/\nexport const ATTR_BROWSER_BRANDS = 'browser.brands';\nexport const ATTR_BROWSER_LANGUAGE = 'browser.language';\nexport const ATTR_BROWSER_MOBILE = 'browser.mobile';\nexport const ATTR_BROWSER_PLATFORM = 'browser.platform';\n"]}