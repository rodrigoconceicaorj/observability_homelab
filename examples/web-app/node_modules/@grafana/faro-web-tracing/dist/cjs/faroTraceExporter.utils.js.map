{"version":3,"file":"faroTraceExporter.utils.js","sourceRoot":"","sources":["../../src/faroTraceExporter.utils.ts"],"names":[],"mappings":"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","sourcesContent":["import type { SpanContext } from '@opentelemetry/api';\nimport { ESpanKind, type IResourceSpans } from '@opentelemetry/otlp-transformer/build/src/trace/internal-types';\n\nimport { faro, unknownString } from '@grafana/faro-web-sdk';\nimport type { EventAttributes as FaroEventAttributes } from '@grafana/faro-web-sdk';\n\nconst DURATION_NS_KEY = 'duration_ns';\n\nexport function sendFaroEvents(resourceSpans: IResourceSpans[] = []) {\n  for (const resourceSpan of resourceSpans) {\n    const { scopeSpans } = resourceSpan;\n\n    for (const scopeSpan of scopeSpans) {\n      const { scope, spans = [] } = scopeSpan;\n\n      for (const span of spans) {\n        if (span.kind !== ESpanKind.SPAN_KIND_CLIENT) {\n          continue;\n        }\n\n        const spanContext: Pick<SpanContext, 'traceId' | 'spanId'> = {\n          traceId: span.traceId.toString(),\n          spanId: span.spanId.toString(),\n        };\n\n        const faroEventAttributes: FaroEventAttributes = {};\n        for (const attribute of span.attributes) {\n          faroEventAttributes[attribute.key] = String(Object.values(attribute.value)[0]);\n        }\n\n        // Add span duration in nanoseconds\n        if (!Number.isNaN(span.endTimeUnixNano) && !Number.isNaN(span.startTimeUnixNano)) {\n          faroEventAttributes[DURATION_NS_KEY] = String(Number(span.endTimeUnixNano) - Number(span.startTimeUnixNano));\n        }\n\n        const index = (scope?.name ?? '').indexOf('-');\n        let eventName = unknownString;\n\n        if (scope?.name) {\n          if (index === -1) {\n            eventName = scope.name.split('/')[1] ?? scope.name;\n          }\n\n          if (index > -1) {\n            eventName = scope?.name.substring(index + 1);\n          }\n        }\n\n        faro.api.pushEvent(`faro.tracing.${eventName}`, faroEventAttributes, undefined, {\n          spanContext,\n          // Convert nanoseconds to milliseconds\n          timestampOverwriteMs: Number(span.endTimeUnixNano) / 1_000_000,\n          customPayloadTransformer: (payload) => {\n            if (\n              faroEventAttributes['faro.action.user.name'] != null &&\n              faroEventAttributes['faro.action.user.parentId'] != null\n            ) {\n              payload.action = {\n                name: faroEventAttributes['faro.action.user.name'],\n                parentId: faroEventAttributes['faro.action.user.parentId'],\n              };\n\n              delete payload.attributes?.['faro.action.user.name'];\n              delete payload.attributes?.['faro.action.user.parentId'];\n            }\n\n            return payload;\n          },\n        });\n      }\n    }\n  }\n}\n"]}