{"version":3,"file":"faroTraceExporter.js","sourceRoot":"","sources":["../../src/faroTraceExporter.ts"],"names":[],"mappings":";;;AAAA,4CAAuD;AAEvD,qFAA2G;AAG3G,qEAA2D;AAG3D;IACE,2BAAoB,MAA+B;QAA/B,WAAM,GAAN,MAAM,CAAyB;IAAG,CAAC;IAEvD,kCAAM,GAAN,UAAO,KAAqB,EAAE,cAA8C;QAC1E,IAAM,UAAU,GAAG,IAAA,0CAA+B,EAAC,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;QAEhG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACvC,IAAA,wCAAc,EAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QAEzC,cAAc,CAAC,EAAE,IAAI,EAAE,uBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,oCAAQ,GAAR;QACE,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IACH,wBAAC;AAAD,CAAC,AAfD,IAeC;AAfY,8CAAiB","sourcesContent":["import { ExportResultCode } from '@opentelemetry/core';\nimport type { ExportResult } from '@opentelemetry/core';\nimport { createExportTraceServiceRequest } from '@opentelemetry/otlp-transformer/build/src/trace/internal';\nimport type { ReadableSpan, SpanExporter } from '@opentelemetry/sdk-trace-web';\n\nimport { sendFaroEvents } from './faroTraceExporter.utils';\nimport type { FaroTraceExporterConfig } from './types';\n\nexport class FaroTraceExporter implements SpanExporter {\n  constructor(private config: FaroTraceExporterConfig) {}\n\n  export(spans: ReadableSpan[], resultCallback: (result: ExportResult) => void): void {\n    const traceEvent = createExportTraceServiceRequest(spans, { useHex: true, useLongBits: false });\n\n    this.config.api.pushTraces(traceEvent);\n    sendFaroEvents(traceEvent.resourceSpans);\n\n    resultCallback({ code: ExportResultCode.SUCCESS });\n  }\n\n  shutdown(): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n}\n"]}