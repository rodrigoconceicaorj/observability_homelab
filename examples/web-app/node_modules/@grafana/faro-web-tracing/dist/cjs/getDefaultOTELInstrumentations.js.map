{"version":3,"file":"getDefaultOTELInstrumentations.js","sourceRoot":"","sources":["../../src/getDefaultOTELInstrumentations.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AASA,wEAOC;AAhBD,8EAA4E;AAE5E,mEAAkE;AAClE,+DAGgC;AAGhC,SAAgB,8BAA8B,CAAC,OAA4C;IAA5C,wBAAA,EAAA,YAA4C;IACjF,IAAA,2BAA2B,GAAkD,OAAO,4BAAzD,EAAE,yBAAyB,GAAuB,OAAO,0BAA9B,EAAK,aAAa,UAAK,OAAO,EAAtF,4DAA4E,CAAF,CAAa;IAE7F,IAAM,SAAS,GAAG,iCAAiC,CAAC,2BAA2B,EAAE,aAAa,CAAC,CAAC;IAChG,IAAM,OAAO,GAAG,+BAA+B,CAAC,yBAAyB,EAAE,aAAa,CAAC,CAAC;IAE1F,OAAO,CAAC,IAAI,4CAAoB,CAAC,SAAS,CAAC,EAAE,IAAI,+CAAsB,CAAC,OAAO,CAAC,CAAC,CAAC;AACpF,CAAC;AACD,SAAS,iCAAiC,CACxC,2BAA0F,EAC1F,aAAsC;IAEtC,+CACK,aAAa,KAChB,mBAAmB,EAAE,IAAI,KAEtB,2BAA2B;QAC9B,4BAA4B;QAC5B,2BAA2B,EAAE,IAAA,+DAAwC,EACnE,2BAA2B,aAA3B,2BAA2B,uBAA3B,2BAA2B,CAAE,2BAA2B,CACzD,IACD;AACJ,CAAC;AAED,SAAS,+BAA+B,CACtC,yBAAsF,EACtF,aAAsC;IAEtC,+CACK,aAAa,KAChB,mBAAmB,EAAE,IAAI,KAEtB,yBAAyB;QAC5B,4BAA4B;QAC5B,2BAA2B,EAAE,IAAA,6DAAsC,EACjE,yBAAyB,aAAzB,yBAAyB,uBAAzB,yBAAyB,CAAE,2BAA2B,CACvD,IACD;AACJ,CAAC","sourcesContent":["import { FetchInstrumentation } from '@opentelemetry/instrumentation-fetch';\n\nimport { FaroXhrInstrumentation } from './faroXhrInstrumentation';\nimport {\n  fetchCustomAttributeFunctionWithDefaults,\n  xhrCustomAttributeFunctionWithDefaults,\n} from './instrumentationUtils';\nimport type { DefaultInstrumentationsOptions, InstrumentationOption } from './types';\n\nexport function getDefaultOTELInstrumentations(options: DefaultInstrumentationsOptions = {}): InstrumentationOption[] {\n  const { fetchInstrumentationOptions, xhrInstrumentationOptions, ...sharedOptions } = options;\n\n  const fetchOpts = createFetchInstrumentationOptions(fetchInstrumentationOptions, sharedOptions);\n  const xhrOpts = createXhrInstrumentationOptions(xhrInstrumentationOptions, sharedOptions);\n\n  return [new FetchInstrumentation(fetchOpts), new FaroXhrInstrumentation(xhrOpts)];\n}\nfunction createFetchInstrumentationOptions(\n  fetchInstrumentationOptions: DefaultInstrumentationsOptions['fetchInstrumentationOptions'],\n  sharedOptions: Record<string, unknown>\n) {\n  return {\n    ...sharedOptions,\n    ignoreNetworkEvents: true,\n    // keep this here to overwrite the defaults above if provided by the users\n    ...fetchInstrumentationOptions,\n    // always keep this function\n    applyCustomAttributesOnSpan: fetchCustomAttributeFunctionWithDefaults(\n      fetchInstrumentationOptions?.applyCustomAttributesOnSpan\n    ),\n  };\n}\n\nfunction createXhrInstrumentationOptions(\n  xhrInstrumentationOptions: DefaultInstrumentationsOptions['xhrInstrumentationOptions'],\n  sharedOptions: Record<string, unknown>\n) {\n  return {\n    ...sharedOptions,\n    ignoreNetworkEvents: true,\n    // keep this here to overwrite the defaults above if provided by the users\n    ...xhrInstrumentationOptions,\n    // always keep this function\n    applyCustomAttributesOnSpan: xhrCustomAttributeFunctionWithDefaults(\n      xhrInstrumentationOptions?.applyCustomAttributesOnSpan\n    ),\n  };\n}\n"]}