{"version":3,"file":"mockTransport.js","sourceRoot":"","sources":["../../../src/testUtils/mockTransport.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAE9C,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAErC,MAAM,OAAO,aAAc,SAAQ,aAAa;IAM9C,YAAoB,aAAuB,EAAE;QAC3C,KAAK,EAAE,CAAC;QADU,eAAU,GAAV,UAAU,CAAe;QALpC,SAAI,GAAG,yBAAyB,CAAC;QACjC,YAAO,GAAG,OAAO,CAAC;QAE3B,UAAK,GAAoB,EAAE,CAAC;IAI5B,CAAC;IAED,IAAI,CAAC,KAAsB;QACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;IAC5B,CAAC;IAEQ,SAAS;QAChB,OAAO,IAAI,CAAC;IACd,CAAC;IAEQ,aAAa;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;CACF","sourcesContent":["import type { Patterns } from '../config';\nimport { BaseTransport } from '../transports';\nimport type { Transport, TransportItem } from '../transports';\nimport { VERSION } from '../version';\n\nexport class MockTransport extends BaseTransport implements Transport {\n  readonly name = '@grafana/transport-mock';\n  readonly version = VERSION;\n\n  items: TransportItem[] = [];\n\n  constructor(private ignoreURLs: Patterns = []) {\n    super();\n  }\n\n  send(items: TransportItem[]): void | Promise<void> {\n    this.items.push(...items);\n  }\n\n  override isBatched(): boolean {\n    return true;\n  }\n\n  override getIgnoreUrls(): Patterns {\n    return this.ignoreURLs;\n  }\n}\n"]}