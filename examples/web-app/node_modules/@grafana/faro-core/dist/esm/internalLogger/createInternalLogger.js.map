{"version":3,"file":"createInternalLogger.js","sourceRoot":"","sources":["../../../src/internalLogger/createInternalLogger.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,MAAM,qBAAqB,CAAC;AAE9D,OAAO,EAAE,IAAI,EAAE,MAAM,UAAU,CAAC;AAEhC,OAAO,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,mBAAmB,EAAE,MAAM,SAAS,CAAC;AAGjG,MAAM,UAAU,oBAAoB,CAClC,mBAAqC,uBAAuB,EAC5D,mBAAmB,GAAG,0BAA0B;IAEhD,MAAM,cAAc,GAAG,qBAAqB,CAAC;IAE7C,IAAI,mBAAmB,GAAG,mBAAmB,CAAC,GAAG,EAAE,CAAC;QAClD,cAAc,CAAC,KAAK;YAClB,mBAAmB,IAAI,mBAAmB,CAAC,KAAK;gBAC9C,CAAC,CAAC,UAAU,GAAG,IAAI;oBACf,gBAAgB,CAAC,KAAK,CAAC,GAAG,cAAc,CAAC,MAAM,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;gBAChE,CAAC;gBACH,CAAC,CAAC,IAAI,CAAC;QAEX,cAAc,CAAC,IAAI;YACjB,mBAAmB,IAAI,mBAAmB,CAAC,IAAI;gBAC7C,CAAC,CAAC,UAAU,GAAG,IAAI;oBACf,gBAAgB,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,MAAM,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;gBAC/D,CAAC;gBACH,CAAC,CAAC,IAAI,CAAC;QAEX,cAAc,CAAC,IAAI;YACjB,mBAAmB,IAAI,mBAAmB,CAAC,IAAI;gBAC7C,CAAC,CAAC,UAAU,GAAG,IAAI;oBACf,gBAAgB,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,MAAM,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;gBAC/D,CAAC;gBACH,CAAC,CAAC,IAAI,CAAC;QAEX,cAAc,CAAC,KAAK;YAClB,mBAAmB,IAAI,mBAAmB,CAAC,OAAO;gBAChD,CAAC,CAAC,UAAU,GAAG,IAAI;oBACf,gBAAgB,CAAC,KAAK,CAAC,GAAG,cAAc,CAAC,MAAM,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;gBAChE,CAAC;gBACH,CAAC,CAAC,IAAI,CAAC;IACb,CAAC;IAED,OAAO,cAAc,CAAC;AACxB,CAAC","sourcesContent":["import { defaultUnpatchedConsole } from '../unpatchedConsole';\nimport type { UnpatchedConsole } from '../unpatchedConsole';\nimport { noop } from '../utils';\n\nimport { defaultInternalLogger, defaultInternalLoggerLevel, InternalLoggerLevel } from './const';\nimport type { InternalLogger } from './types';\n\nexport function createInternalLogger(\n  unpatchedConsole: UnpatchedConsole = defaultUnpatchedConsole,\n  internalLoggerLevel = defaultInternalLoggerLevel\n): InternalLogger {\n  const internalLogger = defaultInternalLogger;\n\n  if (internalLoggerLevel > InternalLoggerLevel.OFF) {\n    internalLogger.error =\n      internalLoggerLevel >= InternalLoggerLevel.ERROR\n        ? function (...args) {\n            unpatchedConsole.error(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n\n    internalLogger.warn =\n      internalLoggerLevel >= InternalLoggerLevel.WARN\n        ? function (...args) {\n            unpatchedConsole.warn(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n\n    internalLogger.info =\n      internalLoggerLevel >= InternalLoggerLevel.INFO\n        ? function (...args) {\n            unpatchedConsole.info(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n\n    internalLogger.debug =\n      internalLoggerLevel >= InternalLoggerLevel.VERBOSE\n        ? function (...args) {\n            unpatchedConsole.debug(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n  }\n\n  return internalLogger;\n}\n"]}