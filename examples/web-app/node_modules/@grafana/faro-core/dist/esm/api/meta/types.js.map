{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/api/meta/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { MetaOverrides, MetaPage, MetaSession, MetaUser, MetaView } from '../../metas';\n\ntype OverridesAvailableThroughApi = Pick<MetaOverrides, 'serviceName'>;\n\nexport interface MetaAPI {\n  setUser: (user?: MetaUser | undefined) => void;\n  resetUser: () => void;\n  setSession: (\n    session?: MetaSession | undefined,\n    options?: {\n      overrides: OverridesAvailableThroughApi;\n    }\n  ) => void;\n  resetSession: () => void;\n  getSession: () => MetaSession | undefined;\n  setView: (\n    view?: MetaView | undefined,\n    options?: {\n      overrides: OverridesAvailableThroughApi;\n    }\n  ) => void;\n  getView: () => MetaView | undefined;\n  /**\n   * If a string is provided, it will be used as the page id.\n   */\n  setPage: (page?: MetaPage | string | undefined) => void;\n  getPage: () => MetaPage | undefined;\n}\n"]}