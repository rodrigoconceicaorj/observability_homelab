{"version":3,"file":"sourceMaps.test.js","sourceRoot":"","sources":["../../../../../src/utils/sourceMaps.test.ts"],"names":[],"mappings":";;AAAA,2CAA2C;AAE3C,QAAQ,CAAC,uBAAuB,EAAE;IAChC,SAAS,CAAC;QACR,OAAQ,MAAc,CAAC,kBAAkB,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC;QACP,OAAQ,MAAc,CAAC,kBAAkB,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE;QACjD,MAAM,CAAC,IAAA,wBAAW,EAAC,KAAK,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;QAE1C,MAAc,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAC3C,MAAM,CAAC,IAAA,wBAAW,EAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { getBundleId } from './sourceMaps';\n\ndescribe('sourceMapUpload utils', () => {\n  beforeAll(() => {\n    delete (global as any).__faroBundleId_foo;\n  });\n\n  afterAll(() => {\n    delete (global as any).__faroBundleId_foo;\n  });\n\n  it('can get the bundle ID from the global object', () => {\n    expect(getBundleId('foo')).toBeUndefined();\n\n    (global as any).__faroBundleId_foo = 'bar';\n    expect(getBundleId('foo')).toEqual('bar');\n  });\n});\n"]}