{"version":3,"file":"initialize.test.js","sourceRoot":"","sources":["../../../../../../src/api/measurements/initialize.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  APIEvent,\n  ApiMessageBusMessages,\n  dateNow,\n  type MeasurementEvent,\n  type PushMeasurementOptions,\n  TransportItem,\n} from '../..';\nimport { initializeFaro } from '../../initialize';\nimport { mockConfig, mockInternalLogger, MockTransport } from '../../testUtils';\nimport { mockMetas, mockTracesApi, mockTransports } from '../apiTestHelpers';\nimport { USER_ACTION_CANCEL, USER_ACTION_END, USER_ACTION_START } from '../const';\nimport { ItemBuffer } from '../ItemBuffer';\nimport type { API } from '../types';\n\nimport { initializeMeasurementsAPI } from './initialize';\n\ndescribe('api.measurements', () => {\n  function createAPI({ dedupe }: { dedupe: boolean } = { dedupe: true }): [API, MockTransport] {\n    const transport = new MockTransport();\n    const config = mockConfig({\n      dedupe,\n      transports: [transport],\n    });\n\n    const { api } = initializeFaro(config);\n\n    return [api, transport];\n  }\n\n  describe('pushMeasurement', () => {\n    let api: API;\n    let transport: MockTransport;\n\n    beforeEach(() => {\n      [api, transport] = createAPI();\n    });\n\n    describe('Filtering', () => {\n      it('filters the same measurement', () => {\n        const measurement = {\n          type: 'custom',\n          values: {\n            a: 1,\n          },\n        };\n\n        api.pushMeasurement(measurement);\n        expect(transport.items).toHaveLength(1);\n\n        api.pushMeasurement(measurement);\n        expect(transport.items).toHaveLength(1);\n      });\n\n      it('filters the same measurement with the same context', () => {\n        const measurement = {\n          type: 'custom',\n          values: {\n            a: 1,\n          },\n        };\n\n        const context = { foo: 'bar' };\n\n        api.pushMeasurement(measurement, { context });\n        expect(transport.items).toHaveLength(1);\n\n        api.pushMeasurement(measurement, { context });\n        expect(transport.items).toHaveLength(1);\n      });\n\n      it(\"doesn't filter events with different context\", () => {\n        const measurement = {\n          type: 'custom',\n          values: {\n            a: 1,\n          },\n        };\n\n        api.pushMeasurement(measurement, { context: { foo: 'bar' } });\n        expect(transport.items).toHaveLength(1);\n\n        api.pushMeasurement(measurement, { context: { bar: 'baz' } });\n        expect(transport.items).toHaveLength(2);\n      });\n\n      it(\"doesn't filter measurements with same type and partially same values\", () => {\n        const measurement1 = {\n          type: 'custom',\n          values: {\n            a: 1,\n          },\n        };\n\n        const measurement2 = {\n          ...measurement1,\n          values: {\n            ...measurement1.values,\n            b: 2,\n          },\n        };\n\n        api.pushMeasurement(measurement1);\n        expect(transport.items).toHaveLength(1);\n\n        api.pushMeasurement(measurement2);\n        expect(transport.items).toHaveLength(2);\n      });\n\n      it(\"doesn't filter measurements with different type and same values\", () => {\n        const measurement1 = {\n          type: 'custom',\n          values: {\n            a: 1,\n          },\n        };\n\n        const measurement2 = {\n          ...measurement1,\n          type: 'web-vitals',\n        };\n\n        api.pushMeasurement(measurement1);\n        expect(transport.items).toHaveLength(1);\n\n        api.pushMeasurement(measurement2);\n        expect(transport.items).toHaveLength(2);\n      });\n\n      it(\"filters a measurement and doesn't filter the next different one\", () => {\n        const measurement1 = {\n          type: 'custom',\n          values: {\n            a: 1,\n          },\n        };\n\n        const measurement2 = {\n          ...measurement1,\n          type: 'web-vitals',\n        };\n\n        api.pushMeasurement(measurement1);\n        expect(transport.items).toHaveLength(1);\n\n        api.pushMeasurement(measurement1);\n        expect(transport.items).toHaveLength(1);\n\n        api.pushMeasurement(measurement2);\n        expect(transport.items).toHaveLength(2);\n      });\n\n      it(\"doesn't filter when dedupe is false\", () => {\n        [api, transport] = createAPI({ dedupe: false });\n\n        const measurement = {\n          type: 'custom',\n          values: {\n            a: 1,\n          },\n        };\n\n        api.pushMeasurement(measurement);\n        expect(transport.items).toHaveLength(1);\n\n        api.pushMeasurement(measurement);\n        expect(transport.items).toHaveLength(2);\n      });\n\n      it(\"doesn't filter when skipDedupe is true\", () => {\n        const measurement = {\n          type: 'custom',\n          values: {\n            a: 1,\n          },\n        };\n\n        api.pushMeasurement(measurement);\n        expect(transport.items).toHaveLength(1);\n\n        api.pushMeasurement(measurement, { skipDedupe: true });\n        expect(transport.items).toHaveLength(2);\n      });\n\n      it('uses traceId and spanId from custom context', () => {\n        const spanContext: PushMeasurementOptions['spanContext'] = {\n          traceId: 'my-trace-id',\n          spanId: 'my-span-id',\n        };\n\n        const measurement = {\n          type: 'custom',\n          values: {\n            a: 1,\n          },\n        };\n\n        api.pushMeasurement(measurement, { spanContext });\n        expect(transport.items).toHaveLength(1);\n\n        expect((transport.items[0]?.payload as MeasurementEvent).trace).toStrictEqual({\n          trace_id: 'my-trace-id',\n          span_id: 'my-span-id',\n        });\n      });\n    });\n\n    it('Sets the timestamp to the provided custom timestamp', () => {\n      api.pushMeasurement(\n        {\n          type: 'custom',\n          values: {\n            a: 1,\n          },\n        },\n        { timestampOverwriteMs: 123 }\n      );\n      expect(transport.items).toHaveLength(1);\n      expect((transport.items[0]?.payload as MeasurementEvent).timestamp).toBe('1970-01-01T00:00:00.123Z');\n    });\n\n    it('stringifies all values in the attributes object', () => {\n      api.pushEvent('test', {\n        // @ts-expect-error\n        a: 1,\n        b: 'foo',\n        // @ts-expect-error\n        c: true,\n        // @ts-expect-error\n        d: { e: 'bar' },\n        // @ts-expect-error\n        g: null,\n        // @ts-expect-error\n        h: undefined,\n        // @ts-expect-error\n        i: [1, 2, 3],\n      });\n\n      // @ts-expect-error\n      expect(transport.items[0]?.payload.attributes).toStrictEqual({\n        a: '1',\n        b: 'foo',\n        c: 'true',\n        d: '{\"e\":\"bar\"}',\n        g: 'null',\n        h: 'undefined',\n        i: '[1,2,3]',\n      });\n    });\n\n    it('does not stringify empty context', () => {\n      api.pushMeasurement(\n        {\n          type: 'custom',\n          values: {},\n        },\n        {\n          context: {},\n        }\n      );\n      api.pushMeasurement({\n        type: 'custom2',\n        values: {},\n      });\n      expect(transport.items).toHaveLength(2);\n      expect((transport.items[0] as TransportItem<MeasurementEvent>).payload.context).toBeUndefined();\n      expect((transport.items[0] as TransportItem<MeasurementEvent>).payload.context).toBeUndefined();\n    });\n  });\n\n  describe('User action', () => {\n    it('buffers the measurement if a user action is in progress', () => {\n      const internalLogger = mockInternalLogger;\n      const config = mockConfig();\n\n      const actionBuffer = new ItemBuffer<TransportItem<APIEvent>>();\n\n      let message: ApiMessageBusMessages | undefined;\n\n      const getMessage = () => message;\n\n      message = { type: 'user-action-start', name: 'testAction', startTime: Date.now(), parentId: 'parent-id' };\n      const api = initializeMeasurementsAPI({\n        unpatchedConsole: console,\n        internalLogger,\n        config,\n        metas: mockMetas,\n        transports: mockTransports,\n        tracesApi: mockTracesApi,\n        actionBuffer,\n        getMessage,\n      });\n\n      api.pushMeasurement({ type: 'test', values: { a: 1 } });\n      expect(actionBuffer.size()).toBe(1);\n\n      message = {\n        type: 'user-action-end',\n        name: 'testAction',\n        id: 'parent-id',\n        startTime: dateNow(),\n        endTime: dateNow(),\n        duration: 0,\n        eventType: 'click',\n      };\n\n      api.pushMeasurement({ type: 'test-2', values: { a: 1 } });\n      expect(actionBuffer.size()).toBe(1);\n\n      message = {\n        type: 'user-action-cancel',\n        name: 'testAction',\n        parentId: 'parent-id',\n      };\n\n      api.pushMeasurement({ type: 'test-3', values: { a: 1 } });\n      expect(actionBuffer.size()).toBe(1);\n    });\n  });\n\n  describe('User action', () => {\n    it('buffers the item if a user action is in progress', () => {\n      const internalLogger = mockInternalLogger;\n      const config = mockConfig();\n\n      const actionBuffer = new ItemBuffer<TransportItem<APIEvent>>();\n\n      let message: ApiMessageBusMessages | undefined;\n\n      const getMessage = () => message;\n\n      message = {\n        type: USER_ACTION_START,\n        name: 'testAction',\n        startTime: Date.now(),\n        parentId: 'parent-id',\n      };\n      const api = initializeMeasurementsAPI({\n        unpatchedConsole: console,\n        internalLogger,\n        config,\n        metas: mockMetas,\n        transports: mockTransports,\n        tracesApi: mockTracesApi,\n        actionBuffer,\n        getMessage,\n      });\n\n      api.pushMeasurement({ type: 'test', values: { a: 1 } });\n      expect(actionBuffer.size()).toBe(1);\n\n      message = {\n        type: USER_ACTION_END,\n        name: 'testAction',\n        id: 'parent-id',\n        startTime: dateNow(),\n        endTime: dateNow(),\n        duration: 0,\n        eventType: 'click',\n      };\n\n      api.pushMeasurement({ type: 'test-2', values: { a: 1 } });\n      expect(actionBuffer.size()).toBe(1);\n\n      message = {\n        type: USER_ACTION_CANCEL,\n        name: 'testAction',\n        parentId: 'parent-id',\n      };\n\n      api.pushMeasurement({ type: 'test-3', values: { a: 1 } });\n      expect(actionBuffer.size()).toBe(1);\n    });\n  });\n});\n"]}