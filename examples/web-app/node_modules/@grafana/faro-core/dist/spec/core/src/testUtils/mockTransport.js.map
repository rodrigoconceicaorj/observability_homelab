{"version":3,"file":"mockTransport.js","sourceRoot":"","sources":["../../../../../src/testUtils/mockTransport.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AACA,4CAA8C;AAE9C,sCAAqC;AAErC;IAAmC,iCAAa;IAM9C,uBAAoB,UAAyB;QAAzB,2BAAA,EAAA,eAAyB;QAC3C,YAAA,MAAK,WAAE,SAAC;QADU,gBAAU,GAAV,UAAU,CAAe;QALpC,UAAI,GAAG,yBAAyB,CAAC;QACjC,aAAO,GAAG,iBAAO,CAAC;QAE3B,WAAK,GAAoB,EAAE,CAAC;;IAI5B,CAAC;IAED,4BAAI,GAAJ,UAAK,KAAsB;;QACzB,CAAA,KAAA,IAAI,CAAC,KAAK,CAAA,CAAC,IAAI,WAAI,KAAK,EAAE;IAC5B,CAAC;IAEQ,iCAAS,GAAlB;QACE,OAAO,IAAI,CAAC;IACd,CAAC;IAEQ,qCAAa,GAAtB;QACE,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IACH,oBAAC;AAAD,CAAC,AArBD,CAAmC,0BAAa,GAqB/C;AArBY,sCAAa","sourcesContent":["import type { Patterns } from '../config';\nimport { BaseTransport } from '../transports';\nimport type { Transport, TransportItem } from '../transports';\nimport { VERSION } from '../version';\n\nexport class MockTransport extends BaseTransport implements Transport {\n  readonly name = '@grafana/transport-mock';\n  readonly version = VERSION;\n\n  items: TransportItem[] = [];\n\n  constructor(private ignoreURLs: Patterns = []) {\n    super();\n  }\n\n  send(items: TransportItem[]): void | Promise<void> {\n    this.items.push(...items);\n  }\n\n  override isBatched(): boolean {\n    return true;\n  }\n\n  override getIgnoreUrls(): Patterns {\n    return this.ignoreURLs;\n  }\n}\n"]}