{"version":3,"file":"createInternalLogger.js","sourceRoot":"","sources":["../../../../../src/internalLogger/createInternalLogger.ts"],"names":[],"mappings":";;;;;;;;;;;AAOA,oDAqCC;AA5CD,wDAA8D;AAE9D,kCAAgC;AAEhC,iCAAiG;AAGjG,SAAgB,oBAAoB,CAClC,gBAA4D,EAC5D,mBAAgD;IADhD,iCAAA,EAAA,mBAAqC,0CAAuB;IAC5D,oCAAA,EAAA,sBAAsB,kCAA0B;IAEhD,IAAM,cAAc,GAAG,6BAAqB,CAAC;IAE7C,IAAI,mBAAmB,GAAG,2BAAmB,CAAC,GAAG,EAAE,CAAC;QAClD,cAAc,CAAC,KAAK;YAClB,mBAAmB,IAAI,2BAAmB,CAAC,KAAK;gBAC9C,CAAC,CAAC;oBAAU,cAAO;yBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;wBAAP,yBAAO;;oBACf,gBAAgB,CAAC,KAAK,OAAtB,gBAAgB,iBAAO,UAAG,cAAc,CAAC,MAAM,OAAI,GAAK,IAAI,UAAE;gBAChE,CAAC;gBACH,CAAC,CAAC,YAAI,CAAC;QAEX,cAAc,CAAC,IAAI;YACjB,mBAAmB,IAAI,2BAAmB,CAAC,IAAI;gBAC7C,CAAC,CAAC;oBAAU,cAAO;yBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;wBAAP,yBAAO;;oBACf,gBAAgB,CAAC,IAAI,OAArB,gBAAgB,iBAAM,UAAG,cAAc,CAAC,MAAM,OAAI,GAAK,IAAI,UAAE;gBAC/D,CAAC;gBACH,CAAC,CAAC,YAAI,CAAC;QAEX,cAAc,CAAC,IAAI;YACjB,mBAAmB,IAAI,2BAAmB,CAAC,IAAI;gBAC7C,CAAC,CAAC;oBAAU,cAAO;yBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;wBAAP,yBAAO;;oBACf,gBAAgB,CAAC,IAAI,OAArB,gBAAgB,iBAAM,UAAG,cAAc,CAAC,MAAM,OAAI,GAAK,IAAI,UAAE;gBAC/D,CAAC;gBACH,CAAC,CAAC,YAAI,CAAC;QAEX,cAAc,CAAC,KAAK;YAClB,mBAAmB,IAAI,2BAAmB,CAAC,OAAO;gBAChD,CAAC,CAAC;oBAAU,cAAO;yBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;wBAAP,yBAAO;;oBACf,gBAAgB,CAAC,KAAK,OAAtB,gBAAgB,iBAAO,UAAG,cAAc,CAAC,MAAM,OAAI,GAAK,IAAI,UAAE;gBAChE,CAAC;gBACH,CAAC,CAAC,YAAI,CAAC;IACb,CAAC;IAED,OAAO,cAAc,CAAC;AACxB,CAAC","sourcesContent":["import { defaultUnpatchedConsole } from '../unpatchedConsole';\nimport type { UnpatchedConsole } from '../unpatchedConsole';\nimport { noop } from '../utils';\n\nimport { defaultInternalLogger, defaultInternalLoggerLevel, InternalLoggerLevel } from './const';\nimport type { InternalLogger } from './types';\n\nexport function createInternalLogger(\n  unpatchedConsole: UnpatchedConsole = defaultUnpatchedConsole,\n  internalLoggerLevel = defaultInternalLoggerLevel\n): InternalLogger {\n  const internalLogger = defaultInternalLogger;\n\n  if (internalLoggerLevel > InternalLoggerLevel.OFF) {\n    internalLogger.error =\n      internalLoggerLevel >= InternalLoggerLevel.ERROR\n        ? function (...args) {\n            unpatchedConsole.error(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n\n    internalLogger.warn =\n      internalLoggerLevel >= InternalLoggerLevel.WARN\n        ? function (...args) {\n            unpatchedConsole.warn(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n\n    internalLogger.info =\n      internalLoggerLevel >= InternalLoggerLevel.INFO\n        ? function (...args) {\n            unpatchedConsole.info(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n\n    internalLogger.debug =\n      internalLoggerLevel >= InternalLoggerLevel.VERBOSE\n        ? function (...args) {\n            unpatchedConsole.debug(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n  }\n\n  return internalLogger;\n}\n"]}