{"version":3,"file":"initialize.test.js","sourceRoot":"","sources":["../../../../../../src/api/events/initialize.test.ts"],"names":[],"mappings":"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","sourcesContent":["import type { TransportItem } from '../..';\nimport { initializeFaro } from '../../initialize';\nimport { mockConfig, mockInternalLogger, MockTransport } from '../../testUtils';\nimport { dateNow } from '../../utils';\nimport { mockMetas, mockTracesApi, mockTransports } from '../apiTestHelpers';\nimport { USER_ACTION_CANCEL, USER_ACTION_END, USER_ACTION_START } from '../const';\nimport { ItemBuffer } from '../ItemBuffer';\nimport type { API, APIEvent, ApiMessageBusMessages } from '../types';\n\nimport { initializeEventsAPI } from './initialize';\nimport type { EventEvent, PushEventOptions } from './types';\n\ndescribe('api.events', () => {\n  function createAPI({ dedupe }: { dedupe: boolean } = { dedupe: true }): [API, MockTransport] {\n    const transport = new MockTransport();\n    const config = mockConfig({\n      dedupe,\n      transports: [transport],\n    });\n\n    const { api } = initializeFaro(config);\n\n    return [api, transport];\n  }\n\n  describe('pushEvent', () => {\n    let api: API;\n    let transport: MockTransport;\n\n    beforeEach(() => {\n      [api, transport] = createAPI();\n    });\n\n    describe('Filtering', () => {\n      it('filters the same event', () => {\n        api.pushEvent('test', {\n          a: '1',\n        });\n        expect(transport.items).toHaveLength(1);\n\n        api.pushEvent('test', {\n          a: '1',\n        });\n        expect(transport.items).toHaveLength(1);\n      });\n\n      it(\"doesn't filter events with same name and partially same values\", () => {\n        api.pushEvent('test', {\n          a: '1',\n        });\n        expect(transport.items).toHaveLength(1);\n\n        api.pushEvent('test', {\n          a: '1',\n          b: '2',\n        });\n        expect(transport.items).toHaveLength(2);\n      });\n\n      it(\"doesn't filter events with different name and same values\", () => {\n        api.pushEvent('test1', {\n          a: '1',\n        });\n        expect(transport.items).toHaveLength(1);\n\n        api.pushEvent('test2', {\n          a: '1',\n        });\n        expect(transport.items).toHaveLength(2);\n      });\n\n      it(\"filters an event and doesn't filter the next different one\", () => {\n        api.pushEvent('test1', {\n          a: '1',\n        });\n        expect(transport.items).toHaveLength(1);\n\n        api.pushEvent('test1', {\n          a: '1',\n        });\n        expect(transport.items).toHaveLength(1);\n\n        api.pushEvent('test2', {\n          b: '1',\n        });\n        expect(transport.items).toHaveLength(2);\n      });\n\n      it(\"doesn't filter when dedupe is false\", () => {\n        [api, transport] = createAPI({ dedupe: false });\n\n        api.pushEvent('test');\n        expect(transport.items).toHaveLength(1);\n\n        api.pushEvent('test');\n        expect(transport.items).toHaveLength(2);\n      });\n\n      it(\"doesn't filter when skipDedupe is true\", () => {\n        api.pushEvent('test');\n        expect(transport.items).toHaveLength(1);\n\n        api.pushEvent('test', {}, undefined, { skipDedupe: true });\n        expect(transport.items).toHaveLength(2);\n      });\n\n      it('uses traceId and spanId from custom context', () => {\n        const spanContext: PushEventOptions['spanContext'] = {\n          traceId: 'my-trace-id',\n          spanId: 'my-span-id',\n        };\n\n        const mockGetTraceContext = jest.fn();\n        jest.spyOn(api, 'getTraceContext').mockImplementationOnce(mockGetTraceContext);\n\n        api.pushEvent('test', undefined, undefined, { spanContext });\n\n        expect(mockGetTraceContext).not.toHaveBeenCalled();\n        expect((transport.items[0]?.payload as EventEvent).trace).toStrictEqual({\n          trace_id: 'my-trace-id',\n          span_id: 'my-span-id',\n        });\n      });\n\n      it('Sets the timestamp to the provided custom timestamp', () => {\n        api.pushEvent('test', undefined, undefined, { timestampOverwriteMs: 123 });\n        expect(transport.items).toHaveLength(1);\n        expect((transport.items[0]?.payload as EventEvent).timestamp).toBe('1970-01-01T00:00:00.123Z');\n      });\n\n      it('stringifies all values in the attributes object', () => {\n        api.pushEvent('test', {\n          // @ts-expect-error\n          a: 1,\n          b: 'foo',\n          // @ts-expect-error\n          c: true,\n          // @ts-expect-error\n          d: { e: 'bar' },\n          // @ts-expect-error\n          g: null,\n          // @ts-expect-error\n          h: undefined,\n          // @ts-expect-error\n          i: [1, 2, 3],\n        });\n\n        // @ts-expect-error\n        expect(transport.items[0]?.payload.attributes).toStrictEqual({\n          a: '1',\n          b: 'foo',\n          c: 'true',\n          d: '{\"e\":\"bar\"}',\n          g: 'null',\n          h: 'undefined',\n          i: '[1,2,3]',\n        });\n      });\n\n      it('does not stringify empty attributes', () => {\n        api.pushEvent('test');\n        api.pushEvent('test2', {});\n        expect(transport.items).toHaveLength(2);\n        expect((transport.items[0] as TransportItem<EventEvent>).payload.attributes).toBeUndefined();\n        expect((transport.items[0] as TransportItem<EventEvent>).payload.attributes).toBeUndefined();\n      });\n    });\n  });\n\n  describe('User action', () => {\n    it('buffers the error if a user action is in progress', () => {\n      const internalLogger = mockInternalLogger;\n      const config = mockConfig();\n\n      const actionBuffer = new ItemBuffer<TransportItem<APIEvent>>();\n\n      let message: ApiMessageBusMessages | undefined;\n\n      const getMessage = () => message;\n\n      message = {\n        type: USER_ACTION_START,\n        name: 'testAction',\n        startTime: Date.now(),\n        parentId: 'parent-id',\n      };\n      const api = initializeEventsAPI({\n        unpatchedConsole: console,\n        internalLogger,\n        config,\n        metas: mockMetas,\n        transports: mockTransports,\n        tracesApi: mockTracesApi,\n        actionBuffer,\n        getMessage,\n      });\n\n      api.pushEvent('test');\n      expect(actionBuffer.size()).toBe(1);\n\n      message = {\n        type: USER_ACTION_END,\n        name: 'testAction',\n        id: 'parent-id',\n        startTime: dateNow(),\n        endTime: dateNow(),\n        duration: 0,\n        eventType: 'click',\n      };\n\n      api.pushEvent('test-2');\n      expect(actionBuffer.size()).toBe(1);\n\n      message = {\n        type: USER_ACTION_CANCEL,\n        name: 'testAction',\n        parentId: 'parent-id',\n      };\n\n      api.pushEvent('test-3');\n      expect(actionBuffer.size()).toBe(1);\n    });\n  });\n});\n"]}