{"version":3,"file":"userActionLifecycleHandler.test.js","sourceRoot":"","sources":["../../../../../src/api/userActionLifecycleHandler.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  type APIEvent,\n  ApiMessageBusMessages,\n  type Config,\n  dateNow,\n  EventEvent,\n  type Meta,\n  TransportItem,\n  TransportItemType,\n  USER_ACTION_HALT,\n  UserActionStartMessage,\n} from '..';\nimport { Observable } from '../utils/reactive';\n\nimport { mockTransports } from './apiTestHelpers';\nimport { USER_ACTION_CANCEL, USER_ACTION_END, USER_ACTION_START } from './const';\nimport type { UserActionHaltMessage } from './types';\nimport { createUserActionLifecycleHandler } from './userActionLifecycleHandler';\n\ndescribe('userActionLifecycleHandler', () => {\n  it('assigns the user-action-start message to the message variable when it receives it', () => {\n    const apiMessageBus = new Observable<ApiMessageBusMessages>();\n\n    const { getMessage } = createUserActionLifecycleHandler({\n      apiMessageBus,\n      transports: mockTransports,\n      config: {} as Config,\n    });\n\n    const message: UserActionStartMessage = {\n      type: USER_ACTION_START,\n      name: 'start-test',\n      startTime: 0,\n      parentId: '123',\n    };\n\n    apiMessageBus.notify(message);\n\n    expect(getMessage()).toEqual(message);\n  });\n\n  it('assigns the user-action-halt message to the message variable when it receives it', () => {\n    const apiMessageBus = new Observable<ApiMessageBusMessages>();\n\n    const { getMessage } = createUserActionLifecycleHandler({\n      apiMessageBus,\n      transports: mockTransports,\n      config: {} as Config,\n    });\n\n    const message: UserActionHaltMessage = {\n      type: USER_ACTION_HALT,\n      name: 'halt-test',\n      haltTime: 0,\n      reason: 'pending-requests',\n      parentId: '123',\n    };\n\n    apiMessageBus.notify(message);\n\n    expect(getMessage()).toEqual(message);\n  });\n\n  it('When it receives a user-action-cancel message, it resets the cached message flushes the buffer and sends the items to the transports', () => {\n    const apiMessageBus = new Observable<ApiMessageBusMessages>();\n\n    const mockExecute = jest.fn();\n    const { actionBuffer, getMessage } = createUserActionLifecycleHandler({\n      apiMessageBus,\n      transports: {\n        ...mockTransports,\n        execute: mockExecute,\n      },\n      config: {} as Config,\n    });\n\n    const message: UserActionStartMessage = {\n      type: USER_ACTION_START,\n      name: '',\n      startTime: 0,\n      parentId: '',\n    };\n\n    apiMessageBus.notify(message);\n\n    const item = { type: TransportItemType.EVENT, payload: {}, meta: {} as Meta };\n    actionBuffer.addItem(item);\n\n    const cancelMessage: ApiMessageBusMessages = {\n      type: USER_ACTION_CANCEL,\n      name: 'pointerdown',\n    };\n\n    apiMessageBus.notify(cancelMessage);\n\n    expect(getMessage()).toBeUndefined();\n    expect(mockExecute).toHaveBeenCalledTimes(1);\n    expect(mockExecute).toHaveBeenCalledWith(item);\n    expect(actionBuffer.size()).toEqual(0);\n  });\n\n  it('When it receives a user-action-end message, it sends the items to the transports with the action parentId and name', () => {\n    const apiMessageBus = new Observable<ApiMessageBusMessages>();\n\n    const mockExecute = jest.fn();\n    const { actionBuffer } = createUserActionLifecycleHandler({\n      apiMessageBus,\n      transports: {\n        ...mockTransports,\n        execute: mockExecute,\n      },\n      config: {} as Config,\n    });\n\n    const message: UserActionStartMessage = {\n      type: USER_ACTION_START,\n      name: 'pointerdown',\n      startTime: 0,\n      parentId: '123',\n    };\n\n    apiMessageBus.notify(message);\n\n    const item = { type: TransportItemType.EVENT, payload: {}, meta: {} as Meta };\n    actionBuffer.addItem(item);\n\n    const endMessage: ApiMessageBusMessages = {\n      type: USER_ACTION_END,\n      id: '123',\n      name: 'pointerdown',\n      startTime: 100,\n      endTime: 120,\n      duration: 20,\n      eventType: 'keydown',\n    };\n\n    apiMessageBus.notify(endMessage);\n\n    expect(mockExecute).toHaveBeenCalledTimes(1);\n    expect(mockExecute).toHaveBeenCalledWith({\n      ...item,\n      payload: {\n        ...item.payload,\n        action: {\n          parentId: '123',\n          name: 'pointerdown',\n        },\n      },\n    });\n  });\n\n  it('excludes items defined by the isExcludeFromUserAction function from the user actions', () => {\n    const apiMessageBus = new Observable<ApiMessageBusMessages>();\n\n    const mockExecute = jest.fn();\n    const { actionBuffer, getMessage } = createUserActionLifecycleHandler({\n      apiMessageBus,\n      transports: {\n        ...mockTransports,\n        execute: mockExecute,\n      },\n      config: {\n        trackUserActionsExcludeItem(item) {\n          return item.type === TransportItemType.EVENT && (item.payload as EventEvent).name === 'i-am-excluded';\n        },\n      } as Config,\n    });\n\n    const message: UserActionStartMessage = {\n      type: USER_ACTION_START,\n      name: 'pointerdown',\n      startTime: 0,\n      parentId: '123',\n    };\n\n    apiMessageBus.notify(message);\n\n    const itemEvent = { type: TransportItemType.EVENT, payload: {}, meta: {} as Meta };\n    actionBuffer.addItem(itemEvent);\n\n    const itemMeasurement: TransportItem<APIEvent> = {\n      type: TransportItemType.MEASUREMENT,\n      payload: { type: 'web-vitals', values: {}, timestamp: dateNow().toString() },\n      meta: {} as Meta,\n    };\n    actionBuffer.addItem(itemMeasurement);\n\n    const itemEventExcluded: TransportItem<EventEvent> = {\n      type: TransportItemType.EVENT,\n      payload: {\n        timestamp: dateNow().toString(),\n        name: 'i-am-excluded',\n      },\n      meta: {} as Meta,\n    };\n    actionBuffer.addItem(itemEventExcluded);\n\n    const endMessage: ApiMessageBusMessages = {\n      type: USER_ACTION_END,\n      id: '123',\n      name: 'pointerdown',\n      startTime: 100,\n      endTime: 120,\n      duration: 20,\n      eventType: 'keydown',\n    };\n\n    apiMessageBus.notify(endMessage);\n\n    expect(mockExecute).toHaveBeenCalledTimes(3);\n    expect(mockExecute).toHaveBeenNthCalledWith(1, {\n      ...itemEvent,\n      payload: {\n        ...itemEvent.payload,\n        action: {\n          parentId: '123',\n          name: 'pointerdown',\n        },\n      },\n    });\n    expect(mockExecute).toHaveBeenNthCalledWith(2, itemMeasurement);\n    expect(mockExecute).toHaveBeenNthCalledWith(3, itemEventExcluded);\n    expect(getMessage()).toBeUndefined();\n  });\n});\n"]}