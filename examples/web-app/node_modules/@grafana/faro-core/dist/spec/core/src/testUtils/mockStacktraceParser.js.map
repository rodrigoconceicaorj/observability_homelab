{"version":3,"file":"mockStacktraceParser.js","sourceRoot":"","sources":["../../../../../src/testUtils/mockStacktraceParser.ts"],"names":[],"mappings":";;;AAEO,IAAM,oBAAoB,GAAqB,UAAC,GAAG;;IACxD,IAAM,MAAM,GAA0B,EAAE,CAAC;IACzC,IAAM,KAAK,GAAG,MAAA,GAAG,CAAC,KAAK,mCAAI,GAAG,CAAC,UAAU,CAAC;IAE1C,IAAI,KAAK,EAAE,CAAC;QACV,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,IAAI;YAC7B,MAAM,CAAC,IAAI,CAAC;gBACV,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,EAAE;aACb,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO;QACL,MAAM,QAAA;KACP,CAAC;AACJ,CAAC,CAAC;AAhBW,QAAA,oBAAoB,wBAgB/B","sourcesContent":["import type { ExceptionStackFrame, StacktraceParser } from '../api';\n\nexport const mockStacktraceParser: StacktraceParser = (err) => {\n  const frames: ExceptionStackFrame[] = [];\n  const stack = err.stack ?? err.stacktrace;\n\n  if (stack) {\n    stack.split('\\n').forEach((line) => {\n      frames.push({\n        filename: line,\n        function: '',\n      });\n    });\n  }\n\n  return {\n    frames,\n  };\n};\n"]}