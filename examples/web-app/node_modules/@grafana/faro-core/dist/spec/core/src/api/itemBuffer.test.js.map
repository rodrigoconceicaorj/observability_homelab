{"version":3,"file":"itemBuffer.test.js","sourceRoot":"","sources":["../../../../../src/api/itemBuffer.test.ts"],"names":[],"mappings":";;AAAA,2CAA0C;AAE1C,QAAQ,CAAC,YAAY,EAAE;IACrB,EAAE,CAAC,sBAAsB,EAAE;QACzB,IAAM,MAAM,GAAG,IAAI,uBAAU,EAAU,CAAC;QAExC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAElB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gBAAgB,EAAE;QACnB,IAAM,MAAM,GAAG,IAAI,uBAAU,EAAU,CAAC;QAExC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAElB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAE9B,MAAM,CAAC,WAAW,EAAE,CAAC;QAErB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE;QACtC,IAAM,MAAM,GAAG,IAAI,uBAAU,EAAU,CAAC;QAExC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAElB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAE9B,IAAM,YAAY,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAC/B,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAEjC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,YAAY,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAM,CAAC,YAAY,CAAC,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACnD,MAAM,CAAC,YAAY,CAAC,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACnD,MAAM,CAAC,YAAY,CAAC,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { ItemBuffer } from './ItemBuffer';\n\ndescribe('ItemBuffer', () => {\n  it('Adds items to buffer', () => {\n    const buffer = new ItemBuffer<number>();\n\n    buffer.addItem(1);\n    buffer.addItem(2);\n    buffer.addItem(3);\n\n    expect(buffer.size()).toBe(3);\n  });\n\n  it('Flushes buffer', () => {\n    const buffer = new ItemBuffer<number>();\n\n    buffer.addItem(1);\n    buffer.addItem(2);\n    buffer.addItem(3);\n\n    expect(buffer.size()).toBe(3);\n\n    buffer.flushBuffer();\n\n    expect(buffer.size()).toBe(0);\n  });\n\n  it('Flushes buffer and calls callback', () => {\n    const buffer = new ItemBuffer<number>();\n\n    buffer.addItem(1);\n    buffer.addItem(2);\n    buffer.addItem(3);\n\n    expect(buffer.size()).toBe(3);\n\n    const mockCallback = jest.fn();\n    buffer.flushBuffer(mockCallback);\n\n    expect(buffer.size()).toBe(0);\n    expect(mockCallback).toHaveBeenCalledTimes(3);\n    expect(mockCallback).toHaveBeenNthCalledWith(1, 1);\n    expect(mockCallback).toHaveBeenNthCalledWith(2, 2);\n    expect(mockCallback).toHaveBeenNthCalledWith(3, 3);\n  });\n});\n"]}