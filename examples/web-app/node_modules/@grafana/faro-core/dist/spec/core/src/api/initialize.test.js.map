{"version":3,"file":"initialize.test.js","sourceRoot":"","sources":["../../../../../src/api/initialize.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable, TransportItem } from '..';\nimport { mockConfig, mockInternalLogger } from '../testUtils';\nimport { unpatchedConsole } from '../unpatchedConsole/initialize';\n\nimport { mockMetas, mockTransports } from './apiTestHelpers';\nimport { apiMessageBus, initializeAPI } from './initialize';\nimport { ItemBuffer } from './ItemBuffer';\nimport * as createUserActionLifecycleHandlerModule from './userActionLifecycleHandler';\n\ndescribe('initialize', () => {\n  it('should initialize the API', () => {\n    const api = initializeAPI(unpatchedConsole, mockInternalLogger, mockConfig(), mockMetas, mockTransports);\n\n    expect(api).toBeDefined();\n    expect(api).toHaveProperty('pushError');\n    expect(api).toHaveProperty('pushLog');\n    expect(api).toHaveProperty('pushMeasurement');\n    expect(api).toHaveProperty('pushTraces');\n    expect(api).toHaveProperty('pushEvent');\n    expect(api).toHaveProperty('changeStacktraceParser');\n    expect(api).toHaveProperty('getOTEL');\n    expect(api).toHaveProperty('getPage');\n    expect(api).toHaveProperty('getSession');\n    expect(api).toHaveProperty('getStacktraceParser');\n    expect(api).toHaveProperty('getTraceContext');\n    expect(api).toHaveProperty('getView');\n    expect(api).toHaveProperty('initOTEL');\n    expect(api).toHaveProperty('isOTELInitialized');\n    expect(api).toHaveProperty('resetSession');\n    expect(api).toHaveProperty('resetUser');\n    expect(api).toHaveProperty('setSession');\n    expect(api).toHaveProperty('setUser');\n    expect(api).toHaveProperty('setPage');\n    expect(api).toHaveProperty('setView');\n  });\n\n  it('Exports the apiMessageBus observable', () => {\n    expect(apiMessageBus).toBeInstanceOf(Observable);\n  });\n\n  it('creates a user action lifecycle handler', () => {\n    const mockUserActionLifecycleHandler = jest.fn(() => ({\n      actionBuffer: new ItemBuffer<TransportItem>(),\n      getMessage: jest.fn(),\n    }));\n    jest\n      .spyOn(createUserActionLifecycleHandlerModule, 'createUserActionLifecycleHandler')\n      .mockImplementationOnce(mockUserActionLifecycleHandler);\n\n    initializeAPI(unpatchedConsole, mockInternalLogger, mockConfig(), mockMetas, mockTransports);\n\n    expect(mockUserActionLifecycleHandler).toHaveBeenCalled();\n  });\n});\n"]}