{"version":3,"file":"initialize.js","sourceRoot":"","sources":["../../src/initialize.ts"],"names":[],"mappings":";;AAUA,wCA2BC;AArCD,6BAAsC;AAEtC,uDAAiG;AACjG,mDAA4D;AAC5D,iCAAgE;AAChE,6BAAmE;AAEnE,2CAA+E;AAC/E,uDAAgE;AAEhE,SAAgB,cAAc,CAAC,MAAc;IAC3C,IAAM,gBAAgB,GAAG,IAAA,6CAA0B,EAAC,MAAM,CAAC,CAAC;IAC5D,IAAM,cAAc,GAAG,IAAA,yCAAwB,EAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;IAE1E,IAAI,IAAA,kCAA4B,GAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACtD,cAAc,CAAC,KAAK,CAClB,oIAAoI,CACrI,CAAC;QAEF,OAAO,SAAU,CAAC;IACpB,CAAC;IAED,cAAc,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;IAErC,wBAAwB;IACxB,IAAM,KAAK,GAAG,IAAA,uBAAe,EAAC,gBAAgB,EAAE,cAAc,EAAE,MAAM,CAAC,CAAC;IACxE,IAAM,UAAU,GAAG,IAAA,iCAAoB,EAAC,gBAAgB,EAAE,cAAc,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IACzF,IAAM,GAAG,GAAG,IAAA,mBAAa,EAAC,gBAAgB,EAAE,cAAc,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;IACvF,IAAM,gBAAgB,GAAG,IAAA,6CAA0B,EAAC,gBAAgB,EAAE,cAAc,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;IACtH,IAAM,IAAI,GAAG,IAAA,kBAAY,EAAC,gBAAgB,EAAE,cAAc,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,EAAE,gBAAgB,CAAC,CAAC;IAE9G,oGAAoG;IACpG,IAAA,4BAAoB,EAAC,IAAI,CAAC,CAAC;IAC3B,IAAA,sCAAyB,EAAC,IAAI,CAAC,CAAC;IAChC,IAAA,kDAA+B,EAAC,IAAI,CAAC,CAAC;IAEtC,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import { initializeAPI } from './api';\nimport type { Config } from './config';\nimport { initializeInstrumentations, registerInitialInstrumentations } from './instrumentations';\nimport { initializeInternalLogger } from './internalLogger';\nimport { initializeMetas, registerInitialMetas } from './metas';\nimport { isInternalFaroOnGlobalObject, registerFaro } from './sdk';\nimport type { Faro } from './sdk';\nimport { initializeTransports, registerInitialTransports } from './transports';\nimport { initializeUnpatchedConsole } from './unpatchedConsole';\n\nexport function initializeFaro(config: Config): Faro {\n  const unpatchedConsole = initializeUnpatchedConsole(config);\n  const internalLogger = initializeInternalLogger(unpatchedConsole, config);\n\n  if (isInternalFaroOnGlobalObject() && !config.isolate) {\n    internalLogger.error(\n      'Faro is already registered. Either add instrumentations, transports etc. to the global faro instance or use the \"isolate\" property'\n    );\n\n    return undefined!;\n  }\n\n  internalLogger.debug('Initializing');\n\n  // Initializing the APIs\n  const metas = initializeMetas(unpatchedConsole, internalLogger, config);\n  const transports = initializeTransports(unpatchedConsole, internalLogger, config, metas);\n  const api = initializeAPI(unpatchedConsole, internalLogger, config, metas, transports);\n  const instrumentations = initializeInstrumentations(unpatchedConsole, internalLogger, config, metas, transports, api);\n  const faro = registerFaro(unpatchedConsole, internalLogger, config, metas, transports, api, instrumentations);\n\n  // make sure Faro is initialized before registering default metas, instrumentations, transports etc.\n  registerInitialMetas(faro);\n  registerInitialTransports(faro);\n  registerInitialInstrumentations(faro);\n\n  return faro;\n}\n"]}