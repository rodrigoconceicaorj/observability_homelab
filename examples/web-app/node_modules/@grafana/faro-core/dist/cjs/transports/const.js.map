{"version":3,"file":"const.js","sourceRoot":"","sources":["../../../src/transports/const.ts"],"names":[],"mappings":";;;;AAEA,IAAY,iBAMX;AAND,WAAY,iBAAiB;IAC3B,4CAAuB,CAAA;IACvB,gCAAW,CAAA;IACX,gDAA2B,CAAA;IAC3B,oCAAe,CAAA;IACf,oCAAe,CAAA;AACjB,CAAC,EANW,iBAAiB,iCAAjB,iBAAiB,QAM5B;AAEY,QAAA,0BAA0B,GAAuC,CAAA;IAC5E,GAAC,iBAAiB,CAAC,SAAS,IAAG,YAAY;IAC3C,GAAC,iBAAiB,CAAC,GAAG,IAAG,MAAM;IAC/B,GAAC,iBAAiB,CAAC,WAAW,IAAG,cAAc;IAC/C,GAAC,iBAAiB,CAAC,KAAK,IAAG,QAAQ;IACnC,GAAC,iBAAiB,CAAC,KAAK,IAAG,QAAQ;MAC3B,CAAA,CAAC","sourcesContent":["import type { BodyKey } from './types';\n\nexport enum TransportItemType {\n  EXCEPTION = 'exception',\n  LOG = 'log',\n  MEASUREMENT = 'measurement',\n  TRACE = 'trace',\n  EVENT = 'event',\n}\n\nexport const transportItemTypeToBodyKey: Record<TransportItemType, BodyKey> = {\n  [TransportItemType.EXCEPTION]: 'exceptions',\n  [TransportItemType.LOG]: 'logs',\n  [TransportItemType.MEASUREMENT]: 'measurements',\n  [TransportItemType.TRACE]: 'traces',\n  [TransportItemType.EVENT]: 'events',\n} as const;\n"]}