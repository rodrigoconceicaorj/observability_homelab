{"version":3,"file":"initialize.js","sourceRoot":"","sources":["../../../src/api/initialize.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAkBA,sCAgCC;AA7CD,kCAAsC;AAEtC,mCAA+C;AAC/C,2CAAuD;AACvD,+BAA2C;AAC3C,+CAA2D;AAC3D,+BAA2C;AAC3C,mCAA+C;AAE/C,2EAAgF;AAEnE,QAAA,aAAa,GAAG,IAAI,kBAAU,EAAyB,CAAC;AAErE,SAAgB,aAAa,CAC3B,gBAAkC,EAClC,cAA8B,EAC9B,MAAc,EACd,KAAY,EACZ,UAAsB;IAEtB,cAAc,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAEnC,IAAA,KAA+B,IAAA,6DAAgC,EAAC,EAAE,aAAa,uBAAA,EAAE,UAAU,YAAA,EAAE,MAAM,QAAA,EAAE,CAAC,EAApG,YAAY,kBAAA,EAAE,UAAU,gBAA4E,CAAC;IAE7G,IAAM,SAAS,GAAG,IAAA,4BAAmB,EAAC,gBAAgB,EAAE,cAAc,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;IAEnG,IAAM,KAAK,GAAG;QACZ,gBAAgB,kBAAA;QAChB,cAAc,gBAAA;QACd,MAAM,QAAA;QACN,KAAK,OAAA;QACL,UAAU,YAAA;QACV,SAAS,WAAA;QACT,YAAY,cAAA;QACZ,UAAU,YAAA;KACX,CAAC;IAEF,iEACK,SAAS,GACT,IAAA,oCAAuB,EAAC,KAAK,CAAC,GAC9B,IAAA,wBAAiB,EAAC,KAAK,CAAC,GACxB,IAAA,wBAAiB,EAAC,KAAK,CAAC,GACxB,IAAA,wCAAyB,EAAC,KAAK,CAAC,GAChC,IAAA,4BAAmB,EAAC,KAAK,CAAC,EAC7B;AACJ,CAAC","sourcesContent":["import type { Config } from '../config';\nimport type { InternalLogger } from '../internalLogger';\nimport type { Metas } from '../metas';\nimport type { Transports } from '../transports';\nimport type { UnpatchedConsole } from '../unpatchedConsole';\nimport { Observable } from '../utils';\n\nimport { initializeEventsAPI } from './events';\nimport { initializeExceptionsAPI } from './exceptions';\nimport { initializeLogsAPI } from './logs';\nimport { initializeMeasurementsAPI } from './measurements';\nimport { initializeMetaAPI } from './meta';\nimport { initializeTracesAPI } from './traces';\nimport type { API, ApiMessageBusMessages } from './types';\nimport { createUserActionLifecycleHandler } from './userActionLifecycleHandler';\n\nexport const apiMessageBus = new Observable<ApiMessageBusMessages>();\n\nexport function initializeAPI(\n  unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  config: Config,\n  metas: Metas,\n  transports: Transports\n): API {\n  internalLogger.debug('Initializing API');\n\n  const { actionBuffer, getMessage } = createUserActionLifecycleHandler({ apiMessageBus, transports, config });\n\n  const tracesApi = initializeTracesAPI(unpatchedConsole, internalLogger, config, metas, transports);\n\n  const props = {\n    unpatchedConsole,\n    internalLogger,\n    config,\n    metas,\n    transports,\n    tracesApi,\n    actionBuffer,\n    getMessage,\n  };\n\n  return {\n    ...tracesApi,\n    ...initializeExceptionsAPI(props),\n    ...initializeMetaAPI(props),\n    ...initializeLogsAPI(props),\n    ...initializeMeasurementsAPI(props),\n    ...initializeEventsAPI(props),\n  };\n}\n"]}